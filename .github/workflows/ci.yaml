name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  integration_tests:
    name: Integration tests on local server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build and test server processes
        run: docker-compose -f docker-compose.yml build

      - name: Run local integration tests
        env:
          TARGET_BUILD: localtest
        run: |
          STORAGE_URL=http://filesystem:8112 docker-compose -f docker-compose.yml up -d
          docker-compose --project-directory . -f tests/docker-compose.local.yml up --build --exit-code-from test

  version_tests:
    name: Version compatibility testing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - desc: "0.3.2 client (corresponding git tag needed)"
          #   client_version: "0.3.2"
          #   data_version: ""
          #   server_version: ""
          - desc: "0.3.0 data version"
            client_version: ""
            data_version: "0.3.0"
            server_version: ""
          - desc: "before Result has been introduced to server"
            client_version: ""
            data_version: ""
            server_version: "73fc4cd0dedb83ab16562186c14332530e1407d7"
            SERVER_URL: "http://api:8080"
    steps:
      - name: Checkout python client version
        uses: actions/checkout@v2
        with:
          path: client/oneseismic
          ref: ${{ matrix.client_version }}
      - name: Checkout the server version
        uses: actions/checkout@v2
        with:
          path: server/oneseismic
          ref: ${{ matrix.server_version }}
      - name: Build server
        run: |
          docker-compose -f server/oneseismic/docker-compose.yml build
      - name: Build tests
        env:
          FETCH_WITH_CLIENT_VERSION: ${{ matrix.client_version }}
          UPLOAD_WITH_CLIENT_VERSION: ${{ matrix.data_version }}
          TARGET_BUILD: versiontest
        run: |
          docker-compose --project-directory client/oneseismic -f client/oneseismic/tests/docker-compose.local.yml build
      - name: Run version tests
        env:
          SERVER_URL: ${{ matrix.SERVER_URL }}
        run: |
          STORAGE_URL=http://filesystem:8112 docker-compose -f server/oneseismic/docker-compose.yml up -d
          docker-compose --project-directory client/oneseismic -f client/oneseismic/tests/docker-compose.local.yml up --exit-code-from test

  build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-2019]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
            vcpkg install fmt:x64-windows
            vcpkg install msgpack:x64-windows

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
            sudo apt-get install libfmt-dev
            sudo apt-get install libmsgpack-dev

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'mac')
        run: |
            brew install fmt msgpack-cxx

      - name: Configure Windows specifics
        if: startsWith(matrix.os, 'windows')
        run: >
            cmake -S core/ -B build/
            -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
            -DVCPKG_TARGET_TRIPLET=x64-windows
            -G "Visual Studio 16 2019"
            -A x64

      - name: Configure
        run: >
            cmake -S core/ -B build/
            -DBUILD_TESTING=ON
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: Compile
        run: cmake --build build/ --parallel --config Release

      - name: Run tests
        working-directory: build
        run: ctest -C Release --output-on-failure

      - name: Install python dependencies
        run: python -m pip install -r python/requirements-dev.txt

      - name: Build python module
        if: startsWith(matrix.os, 'windows')
        working-directory: python
        run: >
            python setup.py
            build_ext --inplace build
            --
            -Doneseismic_DIR="${{ github.workspace }}/build"
            -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
            -DVCPKG_TARGET_TRIPLET=x64-windows

      - name: Build python module
        if: ${{ !startsWith(matrix.os, 'windows') }}
        working-directory: python
        run: >
            python setup.py
            build_ext --inplace build
            --
            -Doneseismic_DIR="${{ github.workspace }}/build"

      - name: Run python tests
        working-directory: python
        run: python setup.py test
