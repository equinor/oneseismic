// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package oneseismic

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Geometry struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Dim0                 []int64  `protobuf:"varint,2,rep,packed,name=dim0,proto3" json:"dim0,omitempty"`
	Dim1                 []int64  `protobuf:"varint,3,rep,packed,name=dim1,proto3" json:"dim1,omitempty"`
	Dim2                 []int64  `protobuf:"varint,4,rep,packed,name=dim2,proto3" json:"dim2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Geometry) Reset()         { *m = Geometry{} }
func (m *Geometry) String() string { return proto.CompactTextString(m) }
func (*Geometry) ProtoMessage()    {}
func (*Geometry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *Geometry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Geometry.Unmarshal(m, b)
}
func (m *Geometry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Geometry.Marshal(b, m, deterministic)
}
func (m *Geometry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Geometry.Merge(m, src)
}
func (m *Geometry) XXX_Size() int {
	return xxx_messageInfo_Geometry.Size(m)
}
func (m *Geometry) XXX_DiscardUnknown() {
	xxx_messageInfo_Geometry.DiscardUnknown(m)
}

var xxx_messageInfo_Geometry proto.InternalMessageInfo

func (m *Geometry) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *Geometry) GetDim0() []int64 {
	if m != nil {
		return m.Dim0
	}
	return nil
}

func (m *Geometry) GetDim1() []int64 {
	if m != nil {
		return m.Dim1
	}
	return nil
}

func (m *Geometry) GetDim2() []int64 {
	if m != nil {
		return m.Dim2
	}
	return nil
}

type SliceRequest struct {
	Dim                  int32     `protobuf:"varint,1,opt,name=dim,proto3" json:"dim,omitempty"`
	Lineno               int64     `protobuf:"varint,2,opt,name=lineno,proto3" json:"lineno,omitempty"`
	Dim0                 int32     `protobuf:"varint,3,opt,name=dim0,proto3" json:"dim0,omitempty"`
	Dim1                 int32     `protobuf:"varint,4,opt,name=dim1,proto3" json:"dim1,omitempty"`
	Dim2                 int32     `protobuf:"varint,5,opt,name=dim2,proto3" json:"dim2,omitempty"`
	Geometry             *Geometry `protobuf:"bytes,6,opt,name=geometry,proto3" json:"geometry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SliceRequest) Reset()         { *m = SliceRequest{} }
func (m *SliceRequest) String() string { return proto.CompactTextString(m) }
func (*SliceRequest) ProtoMessage()    {}
func (*SliceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *SliceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SliceRequest.Unmarshal(m, b)
}
func (m *SliceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SliceRequest.Marshal(b, m, deterministic)
}
func (m *SliceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SliceRequest.Merge(m, src)
}
func (m *SliceRequest) XXX_Size() int {
	return xxx_messageInfo_SliceRequest.Size(m)
}
func (m *SliceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SliceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SliceRequest proto.InternalMessageInfo

func (m *SliceRequest) GetDim() int32 {
	if m != nil {
		return m.Dim
	}
	return 0
}

func (m *SliceRequest) GetLineno() int64 {
	if m != nil {
		return m.Lineno
	}
	return 0
}

func (m *SliceRequest) GetDim0() int32 {
	if m != nil {
		return m.Dim0
	}
	return 0
}

func (m *SliceRequest) GetDim1() int32 {
	if m != nil {
		return m.Dim1
	}
	return 0
}

func (m *SliceRequest) GetDim2() int32 {
	if m != nil {
		return m.Dim2
	}
	return 0
}

func (m *SliceRequest) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type SliceReply struct {
	Dim0                 int64     `protobuf:"varint,1,opt,name=dim0,proto3" json:"dim0,omitempty"`
	Dim1                 int64     `protobuf:"varint,2,opt,name=dim1,proto3" json:"dim1,omitempty"`
	V                    []float32 `protobuf:"fixed32,3,rep,packed,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SliceReply) Reset()         { *m = SliceReply{} }
func (m *SliceReply) String() string { return proto.CompactTextString(m) }
func (*SliceReply) ProtoMessage()    {}
func (*SliceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

func (m *SliceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SliceReply.Unmarshal(m, b)
}
func (m *SliceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SliceReply.Marshal(b, m, deterministic)
}
func (m *SliceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SliceReply.Merge(m, src)
}
func (m *SliceReply) XXX_Size() int {
	return xxx_messageInfo_SliceReply.Size(m)
}
func (m *SliceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SliceReply.DiscardUnknown(m)
}

var xxx_messageInfo_SliceReply proto.InternalMessageInfo

func (m *SliceReply) GetDim0() int64 {
	if m != nil {
		return m.Dim0
	}
	return 0
}

func (m *SliceReply) GetDim1() int64 {
	if m != nil {
		return m.Dim1
	}
	return 0
}

func (m *SliceReply) GetV() []float32 {
	if m != nil {
		return m.V
	}
	return nil
}

func init() {
	proto.RegisterType((*Geometry)(nil), "oneseismic.Geometry")
	proto.RegisterType((*SliceRequest)(nil), "oneseismic.SliceRequest")
	proto.RegisterType((*SliceReply)(nil), "oneseismic.SliceReply")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xb1, 0x6e, 0x83, 0x30,
	0x10, 0x86, 0x6b, 0x0c, 0x28, 0xbd, 0x66, 0xa8, 0x4e, 0x55, 0x64, 0x75, 0x42, 0x4c, 0x4c, 0x28,
	0xb8, 0x63, 0xb7, 0x66, 0xe8, 0xee, 0x6e, 0x1d, 0x0b, 0xa7, 0xc8, 0x12, 0x60, 0x0a, 0x24, 0x12,
	0x2f, 0xd4, 0xe7, 0xac, 0x62, 0xb9, 0x97, 0x20, 0x75, 0x3b, 0x3e, 0x4e, 0xf7, 0xdd, 0x7f, 0x06,
	0xa8, 0xdd, 0x48, 0xe5, 0x30, 0xba, 0xd9, 0x21, 0xb8, 0x9e, 0x26, 0xb2, 0x53, 0x67, 0xeb, 0xfc,
	0x13, 0x36, 0xef, 0xe4, 0x3a, 0x9a, 0xc7, 0x05, 0x11, 0xe2, 0xe3, 0xc9, 0x36, 0x4a, 0x64, 0xa2,
	0xb8, 0x37, 0xbe, 0xbe, 0xb0, 0xc6, 0x76, 0x7b, 0x15, 0x65, 0xb2, 0x90, 0xc6, 0xd7, 0x81, 0x55,
	0x4a, 0x32, 0xab, 0x02, 0xd3, 0x2a, 0x66, 0xa6, 0xf3, 0x1f, 0x01, 0xdb, 0x8f, 0xd6, 0xd6, 0x64,
	0xe8, 0xfb, 0x44, 0xd3, 0x8c, 0x8f, 0x20, 0x1b, 0xdb, 0xf9, 0xf9, 0x89, 0xb9, 0x94, 0xb8, 0x83,
	0xb4, 0xb5, 0x3d, 0xf5, 0x4e, 0x45, 0x99, 0x28, 0xa4, 0x09, 0x5f, 0xac, 0x95, 0xbe, 0x75, 0xad,
	0x8d, 0x99, 0x5d, 0xb5, 0x09, 0x33, 0x8d, 0x7b, 0xd8, 0x1c, 0x43, 0x24, 0x95, 0x66, 0xa2, 0x78,
	0xd0, 0x4f, 0xe5, 0x35, 0x71, 0xf9, 0x17, 0xd7, 0x70, 0x57, 0xfe, 0x06, 0x10, 0xf6, 0x1c, 0xda,
	0x85, 0xdd, 0xc2, 0x6f, 0xb4, 0x76, 0x47, 0xcc, 0x2a, 0xdc, 0x82, 0x38, 0xfb, 0x1b, 0x44, 0x46,
	0x9c, 0xf5, 0x01, 0xe2, 0x83, 0x1b, 0x09, 0x5f, 0x21, 0xf1, 0xb3, 0x50, 0xdd, 0x4a, 0x6f, 0xcf,
	0xf0, 0xbc, 0xfb, 0xe7, 0xcf, 0xd0, 0x2e, 0xf9, 0xdd, 0x57, 0xea, 0x1f, 0xe8, 0xe5, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xa6, 0x5f, 0x30, 0xa9, 0xae, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	Slice(ctx context.Context, in *SliceRequest, opts ...grpc.CallOption) (*SliceReply, error)
}

type coreClient struct {
	cc grpc.ClientConnInterface
}

func NewCoreClient(cc grpc.ClientConnInterface) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) Slice(ctx context.Context, in *SliceRequest, opts ...grpc.CallOption) (*SliceReply, error) {
	out := new(SliceReply)
	err := c.cc.Invoke(ctx, "/oneseismic.Core/Slice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	Slice(context.Context, *SliceRequest) (*SliceReply, error)
}

// UnimplementedCoreServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServer struct {
}

func (*UnimplementedCoreServer) Slice(ctx context.Context, req *SliceRequest) (*SliceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Slice not implemented")
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_Slice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SliceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).Slice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oneseismic.Core/Slice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).Slice(ctx, req.(*SliceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oneseismic.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Slice",
			Handler:    _Core_Slice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core.proto",
}
